<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
	<insert id="insertMember" parameterType="memberVO">
		insert into member(email, password, cpassword, mainaddr, subaddr, job,
		phone, contact, birth, sms, gender, name, createdate)
		values(#{email}, #{password}, #{cpassword}, #{mainaddr}, #{subaddr}, #{job}, #{phone},
		#{contact}, #{birth}, #{sms}, #{gender}, #{name}, curdate())
	</insert>

	<select id="selectMember" parameterType="memberVO"
		resultType="memberVO">
		select num, email, password, name, gender, phone, role, isdelete
		from member
		<where>
			<if test="email != null">
				and email = #{email}
			</if>
			<if test="password != null">
				and password = #{password}
			</if>
			and isdelete = 'N'
		</where>
	</select>



	<!-- 회원 아이디 찾기 -->
	<select id="selectMemberById" parameterType="memberVO"
		resultType="memberVO">
		select num, email, password, name, gender, phone, role
		from member
		where name = #{name} and isdelete = 'N'
	</select>

	<!-- 회원 비밀번호 찾기 -->
	<select id="selectMemberByPw" parameterType="memberVO"
		resultType="memberVO">
		select num, email, password, name, gender, phone, role
		from member
		where name = #{name} and email = #{email} and isdelete = 'N'
	</select>



	<!-- 회원 정보 업데이트(관리자용) -->
	<update id="adminUserUpdate">
		update member
		set
		name = #{name},
		email = #{email},
		password = #{password},
		cpassword = #{cpassword},
		mainaddr = #{mainaddr},
		subaddr = #{subaddr},
		job = #{job},
		phone = #{phone},
		contact = #{contact},
		birth = #{birth},
		sms = #{sms},
		createdate = curdate(),
		gender = #{gender},
		role = #{role}
		<where>
			num = #{num}
		</where>


	</update>


	<!-- 회원정보 삭제(관리자용) -->
	<update id="deleteUser">
		update member
		set isdelete ='Y'
		where num = #{num}
	</update>

</mapper>
  
  